// Code generated by protoc-gen-go. DO NOT EDIT.
// source: matrix_io/recognition/v1/recognition.proto

package recognitionV1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Describes a recognition feature descriptor
type FeatureDescriptor struct {
	// A unique identifier for the descriptor according to UUID v4
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Descriptor format used by extraction algorithm
	DataFormat string `protobuf:"bytes,2,opt,name=data_format,json=dataFormat,proto3" json:"data_format,omitempty"`
	// The actual recognition descriptor data
	Data []float32 `protobuf:"fixed32,3,rep,packed,name=data,proto3" json:"data,omitempty"`
	// Arbitrary tags for the descriptor set
	// i.e ['lucas', 'jackson family']
	Tags                 []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeatureDescriptor) Reset()         { *m = FeatureDescriptor{} }
func (m *FeatureDescriptor) String() string { return proto.CompactTextString(m) }
func (*FeatureDescriptor) ProtoMessage()    {}
func (*FeatureDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_d23257eff2835548, []int{0}
}

func (m *FeatureDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureDescriptor.Unmarshal(m, b)
}
func (m *FeatureDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureDescriptor.Marshal(b, m, deterministic)
}
func (m *FeatureDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureDescriptor.Merge(m, src)
}
func (m *FeatureDescriptor) XXX_Size() int {
	return xxx_messageInfo_FeatureDescriptor.Size(m)
}
func (m *FeatureDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureDescriptor proto.InternalMessageInfo

func (m *FeatureDescriptor) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *FeatureDescriptor) GetDataFormat() string {
	if m != nil {
		return m.DataFormat
	}
	return ""
}

func (m *FeatureDescriptor) GetData() []float32 {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FeatureDescriptor) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

// Container to group multiple FeatureDescriptors
// makes storage of multiple FeatureDescriptors more
// convenient in files.
type FeatureDescriptorList struct {
	FeatureDescriptors   []*FeatureDescriptor `protobuf:"bytes,1,rep,name=feature_descriptors,json=featureDescriptors,proto3" json:"feature_descriptors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FeatureDescriptorList) Reset()         { *m = FeatureDescriptorList{} }
func (m *FeatureDescriptorList) String() string { return proto.CompactTextString(m) }
func (*FeatureDescriptorList) ProtoMessage()    {}
func (*FeatureDescriptorList) Descriptor() ([]byte, []int) {
	return fileDescriptor_d23257eff2835548, []int{1}
}

func (m *FeatureDescriptorList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureDescriptorList.Unmarshal(m, b)
}
func (m *FeatureDescriptorList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureDescriptorList.Marshal(b, m, deterministic)
}
func (m *FeatureDescriptorList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureDescriptorList.Merge(m, src)
}
func (m *FeatureDescriptorList) XXX_Size() int {
	return xxx_messageInfo_FeatureDescriptorList.Size(m)
}
func (m *FeatureDescriptorList) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureDescriptorList.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureDescriptorList proto.InternalMessageInfo

func (m *FeatureDescriptorList) GetFeatureDescriptors() []*FeatureDescriptor {
	if m != nil {
		return m.FeatureDescriptors
	}
	return nil
}

func init() {
	proto.RegisterType((*FeatureDescriptor)(nil), "matrix_io.recognition.v1.FeatureDescriptor")
	proto.RegisterType((*FeatureDescriptorList)(nil), "matrix_io.recognition.v1.FeatureDescriptorList")
}

func init() {
	proto.RegisterFile("matrix_io/recognition/v1/recognition.proto", fileDescriptor_d23257eff2835548)
}

var fileDescriptor_d23257eff2835548 = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x69, 0x3b, 0x04, 0xb3, 0x8b, 0x46, 0xc4, 0xdc, 0xac, 0x3b, 0x15, 0x65, 0x29, 0xd5,
	0xa3, 0xb7, 0x21, 0x03, 0x61, 0xe2, 0xe8, 0x61, 0x07, 0x11, 0x4a, 0xd6, 0x5f, 0xe6, 0xd0, 0xbe,
	0x92, 0xbc, 0x0c, 0xff, 0x1b, 0xef, 0xfe, 0x95, 0x92, 0xd4, 0xcd, 0xb2, 0xe2, 0xed, 0xfb, 0xe3,
	0xbd, 0xcf, 0xa3, 0x0d, 0xb9, 0x6d, 0x04, 0x2a, 0xf9, 0x99, 0x49, 0x88, 0x55, 0x99, 0x43, 0xdd,
	0x4a, 0x94, 0xd0, 0xc6, 0xbb, 0x64, 0x68, 0x79, 0xa7, 0x00, 0x81, 0xb2, 0xc3, 0x2c, 0x1f, 0x96,
	0xbb, 0x64, 0xd6, 0x91, 0xf3, 0x65, 0x29, 0xd0, 0xa8, 0xf2, 0xa9, 0xd4, 0xb9, 0x92, 0x1d, 0x82,
	0xa2, 0x94, 0x4c, 0x8c, 0x91, 0x05, 0xf3, 0x42, 0x2f, 0x3a, 0x4d, 0x9d, 0xa6, 0xd7, 0x64, 0x5a,
	0x08, 0x14, 0x59, 0x05, 0xaa, 0x11, 0xc8, 0x7c, 0x57, 0x11, 0x1b, 0x2d, 0x5d, 0x62, 0x97, 0xac,
	0x63, 0x41, 0x18, 0x44, 0x7e, 0xea, 0xb4, 0xcd, 0x50, 0xd4, 0x9a, 0x4d, 0xc2, 0xc0, 0x82, 0xac,
	0x9e, 0x19, 0x72, 0x39, 0xba, 0xb8, 0x92, 0x1a, 0xe9, 0x3b, 0xb9, 0xa8, 0xfa, 0x22, 0x2b, 0x0e,
	0x8d, 0x66, 0x5e, 0x18, 0x44, 0xd3, 0xfb, 0x3b, 0xfe, 0xdf, 0x27, 0xf0, 0x11, 0x2d, 0xa5, 0xd5,
	0x71, 0xa4, 0x17, 0x5f, 0x1e, 0xb9, 0x81, 0xb6, 0xfc, 0xc5, 0x48, 0xe8, 0xff, 0xcc, 0x11, 0x6b,
	0x71, 0x96, 0xfe, 0xf9, 0xb5, 0x1d, 0x58, 0x7b, 0x6f, 0xab, 0x5a, 0xe2, 0x87, 0xd9, 0xf2, 0x1c,
	0x9a, 0xb8, 0xdf, 0x9e, 0x4b, 0xd8, 0x2b, 0x47, 0xd1, 0xf3, 0x7a, 0x1f, 0x8c, 0x9f, 0xe3, 0x71,
	0x60, 0x37, 0xc9, 0xb7, 0x7f, 0xf5, 0xe2, 0x06, 0x9f, 0x5f, 0xf9, 0xe0, 0x16, 0xdf, 0x24, 0xdb,
	0x13, 0xc7, 0x7a, 0xf8, 0x09, 0x00, 0x00, 0xff, 0xff, 0x13, 0x54, 0x48, 0x67, 0xd9, 0x01, 0x00,
	0x00,
}
