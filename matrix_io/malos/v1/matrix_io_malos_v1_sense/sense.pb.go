// Code generated by protoc-gen-go. DO NOT EDIT.
// source: matrix_io/malos/v1/sense.proto

package matrix_io_malos_v1_sense

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Dummy lecture.
type Dummy struct {
	// Random value.
	Value                float32  `protobuf:"fixed32,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dummy) Reset()         { *m = Dummy{} }
func (m *Dummy) String() string { return proto.CompactTextString(m) }
func (*Dummy) ProtoMessage()    {}
func (*Dummy) Descriptor() ([]byte, []int) {
	return fileDescriptor_a49e7acbf15932a9, []int{0}
}

func (m *Dummy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dummy.Unmarshal(m, b)
}
func (m *Dummy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dummy.Marshal(b, m, deterministic)
}
func (m *Dummy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dummy.Merge(m, src)
}
func (m *Dummy) XXX_Size() int {
	return xxx_messageInfo_Dummy.Size(m)
}
func (m *Dummy) XXX_DiscardUnknown() {
	xxx_messageInfo_Dummy.DiscardUnknown(m)
}

var xxx_messageInfo_Dummy proto.InternalMessageInfo

func (m *Dummy) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Basic Humidity lecture.
type Humidity struct {
	// Humidity.
	Humidity float32 `protobuf:"fixed32,1,opt,name=humidity,proto3" json:"humidity,omitempty"`
	// Temperature.
	Temperature float32 `protobuf:"fixed32,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	// Raw temperature value from the sensor.
	TemperatureRaw float32 `protobuf:"fixed32,3,opt,name=temperature_raw,json=temperatureRaw,proto3" json:"temperature_raw,omitempty"`
	//  Flag that tells if the temperature is calibrated
	TemperatureIsCalibrated bool     `protobuf:"varint,4,opt,name=temperature_is_calibrated,json=temperatureIsCalibrated,proto3" json:"temperature_is_calibrated,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *Humidity) Reset()         { *m = Humidity{} }
func (m *Humidity) String() string { return proto.CompactTextString(m) }
func (*Humidity) ProtoMessage()    {}
func (*Humidity) Descriptor() ([]byte, []int) {
	return fileDescriptor_a49e7acbf15932a9, []int{1}
}

func (m *Humidity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Humidity.Unmarshal(m, b)
}
func (m *Humidity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Humidity.Marshal(b, m, deterministic)
}
func (m *Humidity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Humidity.Merge(m, src)
}
func (m *Humidity) XXX_Size() int {
	return xxx_messageInfo_Humidity.Size(m)
}
func (m *Humidity) XXX_DiscardUnknown() {
	xxx_messageInfo_Humidity.DiscardUnknown(m)
}

var xxx_messageInfo_Humidity proto.InternalMessageInfo

func (m *Humidity) GetHumidity() float32 {
	if m != nil {
		return m.Humidity
	}
	return 0
}

func (m *Humidity) GetTemperature() float32 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

func (m *Humidity) GetTemperatureRaw() float32 {
	if m != nil {
		return m.TemperatureRaw
	}
	return 0
}

func (m *Humidity) GetTemperatureIsCalibrated() bool {
	if m != nil {
		return m.TemperatureIsCalibrated
	}
	return false
}

type HumidityParams struct {
	// Current temperature used for calibration.
	CurrentTemperature   float32  `protobuf:"fixed32,1,opt,name=current_temperature,json=currentTemperature,proto3" json:"current_temperature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HumidityParams) Reset()         { *m = HumidityParams{} }
func (m *HumidityParams) String() string { return proto.CompactTextString(m) }
func (*HumidityParams) ProtoMessage()    {}
func (*HumidityParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_a49e7acbf15932a9, []int{2}
}

func (m *HumidityParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HumidityParams.Unmarshal(m, b)
}
func (m *HumidityParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HumidityParams.Marshal(b, m, deterministic)
}
func (m *HumidityParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HumidityParams.Merge(m, src)
}
func (m *HumidityParams) XXX_Size() int {
	return xxx_messageInfo_HumidityParams.Size(m)
}
func (m *HumidityParams) XXX_DiscardUnknown() {
	xxx_messageInfo_HumidityParams.DiscardUnknown(m)
}

var xxx_messageInfo_HumidityParams proto.InternalMessageInfo

func (m *HumidityParams) GetCurrentTemperature() float32 {
	if m != nil {
		return m.CurrentTemperature
	}
	return 0
}

// Basic UV radiation lecture.
type UV struct {
	// UV index.
	UvIndex float32 `protobuf:"fixed32,1,opt,name=uv_index,json=uvIndex,proto3" json:"uv_index,omitempty"`
	// Risk of harm from unprotected sun exposure, for the average adult.
	// Accordin to the OMS table. https://www.epa.gov/sunsafety/uv-index-scale-0
	OmsRisk              string   `protobuf:"bytes,2,opt,name=oms_risk,json=omsRisk,proto3" json:"oms_risk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UV) Reset()         { *m = UV{} }
func (m *UV) String() string { return proto.CompactTextString(m) }
func (*UV) ProtoMessage()    {}
func (*UV) Descriptor() ([]byte, []int) {
	return fileDescriptor_a49e7acbf15932a9, []int{3}
}

func (m *UV) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UV.Unmarshal(m, b)
}
func (m *UV) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UV.Marshal(b, m, deterministic)
}
func (m *UV) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UV.Merge(m, src)
}
func (m *UV) XXX_Size() int {
	return xxx_messageInfo_UV.Size(m)
}
func (m *UV) XXX_DiscardUnknown() {
	xxx_messageInfo_UV.DiscardUnknown(m)
}

var xxx_messageInfo_UV proto.InternalMessageInfo

func (m *UV) GetUvIndex() float32 {
	if m != nil {
		return m.UvIndex
	}
	return 0
}

func (m *UV) GetOmsRisk() string {
	if m != nil {
		return m.OmsRisk
	}
	return ""
}

// Basic Pressure lecture.
type Pressure struct {
	// Pressure.
	Pressure float32 `protobuf:"fixed32,1,opt,name=pressure,proto3" json:"pressure,omitempty"`
	// Altimeter.
	Altitude float32 `protobuf:"fixed32,2,opt,name=altitude,proto3" json:"altitude,omitempty"`
	// Temperature.
	Temperature          float32  `protobuf:"fixed32,3,opt,name=temperature,proto3" json:"temperature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pressure) Reset()         { *m = Pressure{} }
func (m *Pressure) String() string { return proto.CompactTextString(m) }
func (*Pressure) ProtoMessage()    {}
func (*Pressure) Descriptor() ([]byte, []int) {
	return fileDescriptor_a49e7acbf15932a9, []int{4}
}

func (m *Pressure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pressure.Unmarshal(m, b)
}
func (m *Pressure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pressure.Marshal(b, m, deterministic)
}
func (m *Pressure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pressure.Merge(m, src)
}
func (m *Pressure) XXX_Size() int {
	return xxx_messageInfo_Pressure.Size(m)
}
func (m *Pressure) XXX_DiscardUnknown() {
	xxx_messageInfo_Pressure.DiscardUnknown(m)
}

var xxx_messageInfo_Pressure proto.InternalMessageInfo

func (m *Pressure) GetPressure() float32 {
	if m != nil {
		return m.Pressure
	}
	return 0
}

func (m *Pressure) GetAltitude() float32 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

func (m *Pressure) GetTemperature() float32 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

// Basic Pressure lecture.
type Imu struct {
	// Vertical axis (yaw)
	Yaw float32 `protobuf:"fixed32,1,opt,name=yaw,proto3" json:"yaw,omitempty"`
	// Lateral axis (pitch)
	Pitch float32 `protobuf:"fixed32,2,opt,name=pitch,proto3" json:"pitch,omitempty"`
	// Longitudinal axis (roll)
	Roll float32 `protobuf:"fixed32,3,opt,name=roll,proto3" json:"roll,omitempty"`
	// acceleration
	AccelX float32 `protobuf:"fixed32,4,opt,name=accel_x,json=accelX,proto3" json:"accel_x,omitempty"`
	AccelY float32 `protobuf:"fixed32,5,opt,name=accel_y,json=accelY,proto3" json:"accel_y,omitempty"`
	AccelZ float32 `protobuf:"fixed32,6,opt,name=accel_z,json=accelZ,proto3" json:"accel_z,omitempty"`
	// gyroscope
	GyroX float32 `protobuf:"fixed32,7,opt,name=gyro_x,json=gyroX,proto3" json:"gyro_x,omitempty"`
	GyroY float32 `protobuf:"fixed32,8,opt,name=gyro_y,json=gyroY,proto3" json:"gyro_y,omitempty"`
	GyroZ float32 `protobuf:"fixed32,9,opt,name=gyro_z,json=gyroZ,proto3" json:"gyro_z,omitempty"`
	// magnetometer
	MagX                 float32  `protobuf:"fixed32,10,opt,name=mag_x,json=magX,proto3" json:"mag_x,omitempty"`
	MagY                 float32  `protobuf:"fixed32,11,opt,name=mag_y,json=magY,proto3" json:"mag_y,omitempty"`
	MagZ                 float32  `protobuf:"fixed32,12,opt,name=mag_z,json=magZ,proto3" json:"mag_z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Imu) Reset()         { *m = Imu{} }
func (m *Imu) String() string { return proto.CompactTextString(m) }
func (*Imu) ProtoMessage()    {}
func (*Imu) Descriptor() ([]byte, []int) {
	return fileDescriptor_a49e7acbf15932a9, []int{5}
}

func (m *Imu) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Imu.Unmarshal(m, b)
}
func (m *Imu) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Imu.Marshal(b, m, deterministic)
}
func (m *Imu) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Imu.Merge(m, src)
}
func (m *Imu) XXX_Size() int {
	return xxx_messageInfo_Imu.Size(m)
}
func (m *Imu) XXX_DiscardUnknown() {
	xxx_messageInfo_Imu.DiscardUnknown(m)
}

var xxx_messageInfo_Imu proto.InternalMessageInfo

func (m *Imu) GetYaw() float32 {
	if m != nil {
		return m.Yaw
	}
	return 0
}

func (m *Imu) GetPitch() float32 {
	if m != nil {
		return m.Pitch
	}
	return 0
}

func (m *Imu) GetRoll() float32 {
	if m != nil {
		return m.Roll
	}
	return 0
}

func (m *Imu) GetAccelX() float32 {
	if m != nil {
		return m.AccelX
	}
	return 0
}

func (m *Imu) GetAccelY() float32 {
	if m != nil {
		return m.AccelY
	}
	return 0
}

func (m *Imu) GetAccelZ() float32 {
	if m != nil {
		return m.AccelZ
	}
	return 0
}

func (m *Imu) GetGyroX() float32 {
	if m != nil {
		return m.GyroX
	}
	return 0
}

func (m *Imu) GetGyroY() float32 {
	if m != nil {
		return m.GyroY
	}
	return 0
}

func (m *Imu) GetGyroZ() float32 {
	if m != nil {
		return m.GyroZ
	}
	return 0
}

func (m *Imu) GetMagX() float32 {
	if m != nil {
		return m.MagX
	}
	return 0
}

func (m *Imu) GetMagY() float32 {
	if m != nil {
		return m.MagY
	}
	return 0
}

func (m *Imu) GetMagZ() float32 {
	if m != nil {
		return m.MagZ
	}
	return 0
}

func init() {
	proto.RegisterType((*Dummy)(nil), "matrix_io.malos.v1.sense.Dummy")
	proto.RegisterType((*Humidity)(nil), "matrix_io.malos.v1.sense.Humidity")
	proto.RegisterType((*HumidityParams)(nil), "matrix_io.malos.v1.sense.HumidityParams")
	proto.RegisterType((*UV)(nil), "matrix_io.malos.v1.sense.UV")
	proto.RegisterType((*Pressure)(nil), "matrix_io.malos.v1.sense.Pressure")
	proto.RegisterType((*Imu)(nil), "matrix_io.malos.v1.sense.Imu")
}

func init() { proto.RegisterFile("matrix_io/malos/v1/sense.proto", fileDescriptor_a49e7acbf15932a9) }

var fileDescriptor_a49e7acbf15932a9 = []byte{
	// 465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0xd5, 0x74, 0x6d, 0xb3, 0x33, 0x34, 0x90, 0x07, 0xaa, 0x37, 0x04, 0xaa, 0x72, 0xc3,
	0xae, 0x52, 0x55, 0xdc, 0xed, 0x8e, 0x01, 0x12, 0xbd, 0x98, 0xa8, 0x02, 0x4c, 0x6d, 0x6f, 0x22,
	0x2f, 0xb1, 0x3a, 0x6b, 0x71, 0x1d, 0xd9, 0x4e, 0x9a, 0xf4, 0x29, 0x78, 0x0e, 0x24, 0xde, 0x11,
	0xc5, 0xf9, 0x67, 0xb1, 0xbb, 0xf3, 0x7d, 0xbf, 0xaf, 0xa7, 0xc7, 0x27, 0x07, 0xde, 0x73, 0xa2,
	0x25, 0x2b, 0x42, 0x26, 0xe6, 0x9c, 0x24, 0x42, 0xcd, 0xf3, 0xc5, 0x5c, 0xd1, 0xbd, 0xa2, 0x7e,
	0x2a, 0x85, 0x16, 0x08, 0x77, 0xdc, 0x37, 0xdc, 0xcf, 0x17, 0xbe, 0xe1, 0xde, 0x3b, 0x18, 0x7d,
	0xc9, 0x38, 0x2f, 0xd1, 0x6b, 0x18, 0xe5, 0x24, 0xc9, 0x28, 0x1e, 0xcc, 0x06, 0xd7, 0x4e, 0x50,
	0x0b, 0xef, 0xef, 0x00, 0xdc, 0x6f, 0x19, 0x67, 0x31, 0xd3, 0x25, 0xba, 0x02, 0xf7, 0xb1, 0xa9,
	0x9b, 0x54, 0xa7, 0xd1, 0x0c, 0xce, 0x34, 0xe5, 0x29, 0x95, 0x44, 0x67, 0x92, 0x62, 0xc7, 0x60,
	0xdb, 0x42, 0x1f, 0xe0, 0xa5, 0x25, 0x43, 0x49, 0x0e, 0x78, 0x68, 0x52, 0xe7, 0x96, 0x1d, 0x90,
	0x03, 0xba, 0x81, 0x4b, 0x3b, 0xc8, 0x54, 0x18, 0x91, 0x84, 0x3d, 0x48, 0xa2, 0x69, 0x8c, 0x4f,
	0x66, 0x83, 0x6b, 0x37, 0x98, 0x5a, 0x81, 0xa5, 0xfa, 0xdc, 0x61, 0xef, 0x13, 0x9c, 0xb7, 0xe3,
	0xae, 0x88, 0x24, 0x5c, 0xa1, 0x39, 0x5c, 0x44, 0x99, 0x94, 0x74, 0xaf, 0x43, 0x7b, 0xc0, 0x7a,
	0x7e, 0xd4, 0xa0, 0x9f, 0x3d, 0xf1, 0x6e, 0xc0, 0xf9, 0x75, 0x8f, 0x2e, 0xc1, 0xcd, 0xf2, 0x90,
	0xed, 0x63, 0x5a, 0x34, 0xd9, 0x49, 0x96, 0x2f, 0x2b, 0x59, 0x21, 0xc1, 0x55, 0x28, 0x99, 0x7a,
	0x32, 0xef, 0x3c, 0x0d, 0x26, 0x82, 0xab, 0x80, 0xa9, 0x27, 0x2f, 0x06, 0x77, 0x25, 0xa9, 0x52,
	0xd5, 0x7b, 0xaf, 0xc0, 0x4d, 0x9b, 0xba, 0xdd, 0x56, 0x6a, 0x31, 0x92, 0x68, 0xa6, 0xb3, 0xb8,
	0x5d, 0x55, 0xa7, 0xff, 0xdf, 0xe4, 0xf0, 0xd9, 0x26, 0xbd, 0xdf, 0x0e, 0x0c, 0x97, 0x3c, 0x43,
	0xaf, 0x60, 0x58, 0x92, 0x43, 0xd3, 0xbc, 0x2a, 0xab, 0x8f, 0x98, 0x32, 0x1d, 0x3d, 0x36, 0x4d,
	0x6b, 0x81, 0x10, 0x9c, 0x48, 0x91, 0x24, 0x4d, 0x2b, 0x53, 0xa3, 0x29, 0x4c, 0x48, 0x14, 0xd1,
	0x24, 0x2c, 0xcc, 0x4a, 0x9d, 0x60, 0x6c, 0xe4, 0xba, 0x07, 0x25, 0x1e, 0x59, 0x60, 0xd3, 0x83,
	0x23, 0x1e, 0x5b, 0x60, 0x8b, 0xde, 0xc0, 0x78, 0x57, 0x4a, 0x11, 0x16, 0x78, 0x52, 0xff, 0x6b,
	0xa5, 0xd6, 0x9d, 0x5d, 0x62, 0xb7, 0xb7, 0x37, 0x9d, 0x7d, 0xc4, 0xa7, 0xbd, 0xbd, 0x45, 0x17,
	0x30, 0xe2, 0x64, 0x17, 0x16, 0x18, 0xea, 0x21, 0x39, 0xd9, 0xad, 0x5b, 0xb3, 0xc4, 0x67, 0x9d,
	0xb9, 0x69, 0xcd, 0x23, 0x7e, 0xd1, 0x99, 0xdb, 0xdb, 0xaf, 0xf0, 0x56, 0xec, 0xa9, 0x5f, 0x9f,
	0x39, 0x13, 0xf5, 0xd9, 0x77, 0xb7, 0x7e, 0x0b, 0x3f, 0xaa, 0x63, 0x5f, 0x55, 0xe6, 0x6a, 0xf0,
	0xc7, 0x99, 0xde, 0x99, 0xdc, 0xf2, 0xbb, 0x7f, 0x67, 0x12, 0x86, 0xfa, 0xf7, 0x8b, 0x87, 0xb1,
	0xf9, 0xdd, 0xc7, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x1d, 0x42, 0x9a, 0x50, 0x03, 0x00,
	0x00,
}
