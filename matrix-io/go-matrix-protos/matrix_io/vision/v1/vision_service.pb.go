// Code generated by protoc-gen-go. DO NOT EDIT.
// source: matrix_io/vision/v1/vision_service.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Message used to send vision requests
type VisionRequest struct {
	// Image for the request.
	Image []byte `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// Detections to perform on the image.
	Detection []EnumDetectionTag `protobuf:"varint,2,rep,packed,name=detection,proto3,enum=matrix_io.vision.v1.EnumDetectionTag" json:"detection,omitempty"`
	// Recognitions to perform on the image. The recognitions should be done
	// after the detections.
	Recognition []EnumFacialRecognitionTag `protobuf:"varint,3,rep,packed,name=recognition,proto3,enum=matrix_io.vision.v1.EnumFacialRecognitionTag" json:"recognition,omitempty"`
	// It is sometimes more convenient to send more than one image to be processed
	// by vision services
	ImageList *ImageList `protobuf:"bytes,4,opt,name=image_list,json=imageList,proto3" json:"image_list,omitempty"`
	// Video data
	Video                *Video   `protobuf:"bytes,5,opt,name=video,proto3" json:"video,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VisionRequest) Reset()         { *m = VisionRequest{} }
func (m *VisionRequest) String() string { return proto.CompactTextString(m) }
func (*VisionRequest) ProtoMessage()    {}
func (*VisionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbc1cccabb641af8, []int{0}
}

func (m *VisionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VisionRequest.Unmarshal(m, b)
}
func (m *VisionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VisionRequest.Marshal(b, m, deterministic)
}
func (m *VisionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VisionRequest.Merge(m, src)
}
func (m *VisionRequest) XXX_Size() int {
	return xxx_messageInfo_VisionRequest.Size(m)
}
func (m *VisionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VisionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VisionRequest proto.InternalMessageInfo

func (m *VisionRequest) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *VisionRequest) GetDetection() []EnumDetectionTag {
	if m != nil {
		return m.Detection
	}
	return nil
}

func (m *VisionRequest) GetRecognition() []EnumFacialRecognitionTag {
	if m != nil {
		return m.Recognition
	}
	return nil
}

func (m *VisionRequest) GetImageList() *ImageList {
	if m != nil {
		return m.ImageList
	}
	return nil
}

func (m *VisionRequest) GetVideo() *Video {
	if m != nil {
		return m.Video
	}
	return nil
}

func init() {
	proto.RegisterType((*VisionRequest)(nil), "matrix_io.vision.v1.VisionRequest")
}

func init() {
	proto.RegisterFile("matrix_io/vision/v1/vision_service.proto", fileDescriptor_bbc1cccabb641af8)
}

var fileDescriptor_bbc1cccabb641af8 = []byte{
	// 339 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0x87, 0xdf, 0xb4, 0x6f, 0x85, 0x6e, 0xab, 0x87, 0xd5, 0x43, 0x28, 0x22, 0xb1, 0x20, 0xe4,
	0xd2, 0x8d, 0xad, 0x27, 0x0f, 0x5e, 0xea, 0x1f, 0x28, 0x28, 0x2d, 0xab, 0x54, 0xf0, 0x52, 0xd2,
	0xed, 0x92, 0x0e, 0x34, 0x19, 0xcd, 0x6e, 0x82, 0x1f, 0xc0, 0x4f, 0x23, 0x7e, 0x48, 0xc9, 0x6e,
	0x6a, 0x2b, 0xa4, 0xde, 0x76, 0x77, 0x7e, 0xcf, 0x33, 0xc3, 0x24, 0xc4, 0x8f, 0x43, 0x9d, 0xc2,
	0xfb, 0x0c, 0x30, 0xc8, 0x41, 0x01, 0x26, 0x41, 0xde, 0x2f, 0x4f, 0x33, 0x25, 0xd3, 0x1c, 0x84,
	0x64, 0xaf, 0x29, 0x6a, 0xa4, 0x87, 0x3f, 0x49, 0x66, 0xeb, 0x2c, 0xef, 0x77, 0xbc, 0xdd, 0xb8,
	0xc5, 0xba, 0x5f, 0x35, 0xb2, 0x3f, 0x35, 0x0f, 0x5c, 0xbe, 0x65, 0x52, 0x69, 0x7a, 0x44, 0x1a,
	0x10, 0x87, 0x91, 0x74, 0x1d, 0xcf, 0xf1, 0xdb, 0xdc, 0x5e, 0xe8, 0x35, 0x69, 0x2e, 0xa4, 0x96,
	0x42, 0x03, 0x26, 0x6e, 0xcd, 0xab, 0xfb, 0x07, 0x83, 0x33, 0x56, 0xd1, 0x92, 0xdd, 0x26, 0x59,
	0x7c, 0xb3, 0x4e, 0x3e, 0x85, 0x11, 0xdf, 0x70, 0x74, 0x4c, 0x5a, 0xa9, 0x14, 0x18, 0x25, 0x60,
	0x34, 0x75, 0xa3, 0xe9, 0xed, 0xd4, 0xdc, 0x85, 0x02, 0xc2, 0x15, 0xdf, 0x10, 0x85, 0x6e, 0xdb,
	0x40, 0xaf, 0x08, 0x31, 0xe3, 0xcd, 0x56, 0xa0, 0xb4, 0xfb, 0xdf, 0x73, 0xfc, 0xd6, 0xe0, 0xa4,
	0xd2, 0x37, 0x2a, 0x62, 0xf7, 0xa0, 0x34, 0x6f, 0xc2, 0xfa, 0x48, 0xcf, 0x49, 0x23, 0x87, 0x85,
	0x44, 0xb7, 0x61, 0xc8, 0x4e, 0x25, 0x39, 0x2d, 0x12, 0xdc, 0x06, 0x07, 0xcb, 0xf5, 0xb6, 0x1e,
	0xed, 0xf2, 0xe9, 0x33, 0x69, 0x4f, 0x52, 0x14, 0x52, 0x29, 0xd3, 0x81, 0x76, 0x77, 0x38, 0xb6,
	0x36, 0xdc, 0x39, 0xfd, 0x33, 0xa3, 0xb2, 0x95, 0xee, 0xfe, 0x1b, 0x7e, 0x38, 0xe4, 0x18, 0x13,
	0x59, 0x46, 0x01, 0xed, 0xf7, 0xda, 0xe4, 0x87, 0xf4, 0xd7, 0x20, 0x93, 0xa2, 0x3a, 0x71, 0x5e,
	0x2e, 0x23, 0xd0, 0xcb, 0x6c, 0xce, 0x04, 0xc6, 0x81, 0x45, 0x7b, 0x80, 0x41, 0x84, 0xbd, 0xf2,
	0x62, 0x2c, 0x2a, 0xa8, 0xf8, 0x2f, 0x3e, 0x6b, 0xf4, 0xc1, 0xbc, 0x8e, 0xc6, 0xe5, 0x2c, 0x6c,
	0xda, 0x9f, 0xef, 0x19, 0xe0, 0xe2, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x1c, 0x2c, 0x50, 0xdd, 0x89,
	0x02, 0x00, 0x00,
}
